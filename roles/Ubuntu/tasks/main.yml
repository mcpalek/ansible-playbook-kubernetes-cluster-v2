

#- name: Install needed prereq for Docker
#  shell: sudo apt install -y curl gnupg2 software-properties-common apt-transport-https ca-certificates
#  when:
# - ansible_distribution in ["Debian", "Ubuntu"]

- name: Ensure dependencies are installed.
  apt:
    name:
    - apt-transport-https
    - ca-certificates
    - curl
    - gnupg2
    - software-properties-common
    - apt-transport-https
    - ca-certificates
    state: present

- name: Update cache
  shell: sudo apt update
  when:
  - ansible_distribution in ["Debian", "Ubuntu"]

- name: Add Docker GPG key
  ansible.builtin.apt_key:
    url: "https://download.docker.com/linux/ubuntu/gpg"
    state: present

- name: Add Docker repository
  ansible.builtin.apt_repository:
    repo: deb [arch=amd64] https://download.docker.com/{{ ansible_system | lower }}/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable
    state: present

- name: Install the latest version of Docker Engine and containerd on Ubuntu
  package:
    name:
    - docker-ce
    - docker-ce-cli
    - containerd.io
    state: present

- name: Add keyrings folder to Ubuntu 20.04
  #shell: mkdir -p -m 755 /etc/apt/keyrings
  file:
    path: /etc/apt/keyrings
    state: directory
    mode: 0755
  when:
  - ansible_distribution in ["Debian", "Ubuntu"] and ansible_distribution_version <= "22.04"
- name: Add kubernetes Repo to Debian/Ubuntu part 1
  #shell: >
  #curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo
  #apt-key add -
  shell: curl -fsSL https://pkgs.k8s.io/core:/stable:/{{ repo_version }}/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
  when:
  - ansible_distribution in ["Debian", "Ubuntu"]
- name: Add kubernetes Repo to Debian/Ubuntu part 2
  shell: echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/{{ repo_version }}/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list
  when:
  - ansible_distribution in ["Debian", "Ubuntu"]
- name: Add kubernetes Repo to Debian/Ubuntu part 3
  shell: apt-get update
  when:
  - ansible_distribution in ["Debian", "Ubuntu"]
- name: Install kubernetes on Debian/Ubuntu
  shell: apt install -y kubelet={{ ubuntu_kubernetes_version }} kubeadm={{ ubuntu_kubernetes_version }} kubectl={{ ubuntu_kubernetes_version }}
  when:
  - ansible_distribution in ["Debian", "Ubuntu"]

#- name: before init on Ubuntu
#  shell: "sudo systemctl daemon-reload \nsudo systemctl restart docker\nsudo systemctl enable docker\nlsmod | grep br_netfilter\nsudo systemctl enable kubelet\nsudo kubeadm config images pull\nsudo containerd config default | sudo tee /etc/containerd/config.toml >/dev/null 2>&1\nsudo sed -i 's/SystemdCgroup \\= false/SystemdCgroup \\= true/g' /etc/containerd/config.toml\nsystemctl restart containerd\n"
- name: Reload systemd daemon
  command: systemctl daemon-reload

- name: Restart docker
  systemd:
    name: docker
    state: restarted
    enabled: yes

- name: Enable kubelet
  systemd:
    name: kubelet
    enabled: yes

- name: Ensure containerd is installed.
  package:
    name: containerd.io
    state: present

#- name: Pull Kubernetes images
#  command: sudo kubeadm config images pull

- name: Use systemd Cgroup driver for containerd
  shell: |
    containerd config default > /etc/containerd/config.toml
    sed -i 's/SystemdCgroup = false/SystemdCgroup = true/g' /etc/containerd/config.toml

- name: restart containerd
  systemd:
    name: containerd
    state: restarted
